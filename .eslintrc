{
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ],
        "paths": [
          "src",
          "__mocks__"
        ]
      }
    }
  },
  "globals": {
    "JSX": "readonly",
    "SocketIOClient": "readonly"
  },
  "extends": [
    "standard-with-typescript",
    "eslint:recommended",
    "plugin:react/recommended"
  ],
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "jest": true,
    "node": true
  },
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module",
    "ecmaVersion": 2018
  },
  "plugins": [
    "no-only-tests",
    "react",
    "jsx-a11y"
  ],
  "rules": {
    "comma-dangle": "off",
    "react/prop-types": "off",
    "no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "jsx-a11y/href-no-hash": [
      "off"
    ],
    "no-underscore-dangle": [
      "error",
      {
        "allowAfterThis": true
      }
    ],
    "react/display-name": "off",
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [
          ".jsx",
          ".tsx"
        ]
      }
    ],
    "max-len": [
      "warn",
      {
        "code": 80,
        "tabWidth": 2,
        "comments": 80,
        "ignoreComments": false,
        "ignoreTrailingComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "array-bracket-newline": [
      "error",
      {
        "multiline": true
      }
    ],
    "strict": [
      "error",
      "safe"
    ],
    "curly": "error",
    "block-scoped-var": "error",
    "complexity": "warn",
    "default-case": "error",
    "dot-notation": "warn",
    "guard-for-in": "warn",
    "linebreak-style": [
      "warn",
      "unix"
    ],
    "no-alert": "error",
    "no-case-declarations": "error",
    "no-console": "error",
    "no-constant-condition": "error",
    "no-continue": "warn",
    "no-div-regex": "error",
    "no-empty": "warn",
    "no-empty-pattern": "error",
    "no-extra-semi": "error",
    "no-implicit-coercion": "error",
    "no-labels": "error",
    "no-loop-func": "error",
    "no-nested-ternary": "warn",
    "no-only-tests/no-only-tests": "error",
    "no-script-url": "error",
    "no-shadow": "off", // FIXME: back to error
    "no-warning-comments": "warn",
    "quote-props": [
      "error",
      "as-needed"
    ],
    "require-yield": "error",
    "max-nested-callbacks": [
      "error",
      4
    ],
    "max-depth": [
      "error",
      4
    ],
    "require-await": "error",
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": "if"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "function"
      }
    ],
    "object-shorthand": "error",
    "indent": "off",
    "@typescript-eslint/indent": "error",
    "no-unused-var": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "no-useless-constructor": "off",
    "no-dupe-class-members": "off",
    "@typescript-eslint/consistent-type-definitions": ["warn", "type"],
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/return-await": "off",
    "@typescript-eslint/default-param-last": "warn", // TODO: we probably should adhere to this rule
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "none",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        }
      }
    ],
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/no-throw-literal": "off", // FIXME: re-allow this rule and fix the use of UIError
    "import/extensions": [
      "error",
      "never"
    ],
    "semi": [
      "error",
      "never"
    ],
    "react/jsx-props-no-spreading": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.test.[jt]s",
          "**/*.test.[jt]sx",
          "**/*.spec.[jt]sx",
          "**/*.spec.[jt]sx",
          "src/globals.d.ts"
        ]
      }
    ]
  },
  "overrides": [
    {
      "files": [
        "*.spec.ts",
        "*.spec.tsx",
        "*.test.ts",
        "*.test.tsx"
      ],
      "rules": {
        "no-underscore-dangle": "off",
        "@typescript-eslint/ban-ts-ignore": "off",
        "max-nested-callbacks": [
          "error",
          10
        ] // allow describe/it nesting
      }
    }
  ]
}